{% extends 'base.html.twig' %}

{% block title %}Articles{% endblock %}

{% block body %}
    <div class="p-5 text-center bg-body-tertiary">
        <h1 class="mb-3">Welcome on our blog!</h1>
        <h4 class="mb-3">Read our last published articles</h4>
    </div>
    {% for article in articles %}
        <div class="card mb-4">
            <div class="card-header">
                <h1>{{ article.title }}</h1>
            </div>
            <div class="card-body">
                {{ article.content }}
            </div>
            <div class="card-footer d-flex justify-content-between">
                <div
                        class="like-block"
                        data-like-url-value="{{ path('social.article.like', { articleId: article.id }) }}"
                        data-unlike-url-value="{{ path('social.article.unlike', { articleId: article.id }) }}"
                        data-article-id="{{ article.id }}"
                        data-liked="{{ article.hasLiked ? 'true' : 'false' }}"
                >
                    <span id="like-counter-{{ article.id }}">{{ article.likeCount }} likes</span>
                    {% if article.canLike %}
                        <button
                                type="button"
                                class="btn btn-sm btn-outline-primary"
                                onclick="toggleLike(this)"
                        >
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">
                                <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143q.09.083.176.171a3 3 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15"/>
                            </svg>
                            <span class="like-text">{{ article.hasLiked ? 'Unlike' : 'Like' }}</span>
                        </button>
                    {% endif %}
                </div>
                <span>Written by {{ article.user.firstName }} {{ article.user.lastName }} - {{ article.releaseDate|date('Y-m-d') }}</span>
            </div>
        </div>
    {% endfor %}
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
    function toggleLike(button) {
        const container = button.closest('.like-block');
        const liked = container.dataset.liked === 'true';
        const url = liked ? container.dataset.unlikeUrlValue : container.dataset.likeUrlValue;
        const articleId = container.dataset.articleId;

        fetch(url, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => {
            if (!response.ok) throw new Error('Erreur lors du like/unlike');
            return response.json();
        })
        .then(data => {
            container.dataset.liked = (!liked).toString();
            const counter = document.getElementById(`like-counter-${articleId}`);
            counter.textContent = `${data} likes`;

            const svg = button.querySelector('svg');
            const text = button.querySelector('.like-text');
            if (liked) {
                text.textContent = 'Like';
            } else {
                text.textContent = 'Unlike';
            }
        })
          .catch(error => console.error(error));
    }
    </script>
{% endblock %}